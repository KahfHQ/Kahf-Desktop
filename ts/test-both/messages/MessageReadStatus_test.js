var import_chai = require("chai");
var import_MessageReadStatus = require("../../messages/MessageReadStatus");
describe("message read status utilities", () => {
  describe("maxReadStatus", () => {
    it("returns the status if passed the same status twice", () => {
      import_chai.assert.strictEqual((0, import_MessageReadStatus.maxReadStatus)(import_MessageReadStatus.ReadStatus.Unread, import_MessageReadStatus.ReadStatus.Unread), import_MessageReadStatus.ReadStatus.Unread);
    });
    it("sorts Unread < Read", () => {
      import_chai.assert.strictEqual((0, import_MessageReadStatus.maxReadStatus)(import_MessageReadStatus.ReadStatus.Unread, import_MessageReadStatus.ReadStatus.Read), import_MessageReadStatus.ReadStatus.Read);
      import_chai.assert.strictEqual((0, import_MessageReadStatus.maxReadStatus)(import_MessageReadStatus.ReadStatus.Read, import_MessageReadStatus.ReadStatus.Unread), import_MessageReadStatus.ReadStatus.Read);
    });
    it("sorts Read < Viewed", () => {
      import_chai.assert.strictEqual((0, import_MessageReadStatus.maxReadStatus)(import_MessageReadStatus.ReadStatus.Read, import_MessageReadStatus.ReadStatus.Viewed), import_MessageReadStatus.ReadStatus.Viewed);
      import_chai.assert.strictEqual((0, import_MessageReadStatus.maxReadStatus)(import_MessageReadStatus.ReadStatus.Viewed, import_MessageReadStatus.ReadStatus.Read), import_MessageReadStatus.ReadStatus.Viewed);
    });
    it("sorts Unread < Viewed", () => {
      import_chai.assert.strictEqual((0, import_MessageReadStatus.maxReadStatus)(import_MessageReadStatus.ReadStatus.Unread, import_MessageReadStatus.ReadStatus.Viewed), import_MessageReadStatus.ReadStatus.Viewed);
      import_chai.assert.strictEqual((0, import_MessageReadStatus.maxReadStatus)(import_MessageReadStatus.ReadStatus.Viewed, import_MessageReadStatus.ReadStatus.Unread), import_MessageReadStatus.ReadStatus.Viewed);
    });
  });
});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsiTWVzc2FnZVJlYWRTdGF0dXNfdGVzdC50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiLy8gQ29weXJpZ2h0IDIwMjEgU2lnbmFsIE1lc3NlbmdlciwgTExDXG4vLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQUdQTC0zLjAtb25seVxuXG5pbXBvcnQgeyBhc3NlcnQgfSBmcm9tICdjaGFpJztcblxuaW1wb3J0IHsgUmVhZFN0YXR1cywgbWF4UmVhZFN0YXR1cyB9IGZyb20gJy4uLy4uL21lc3NhZ2VzL01lc3NhZ2VSZWFkU3RhdHVzJztcblxuZGVzY3JpYmUoJ21lc3NhZ2UgcmVhZCBzdGF0dXMgdXRpbGl0aWVzJywgKCkgPT4ge1xuICBkZXNjcmliZSgnbWF4UmVhZFN0YXR1cycsICgpID0+IHtcbiAgICBpdCgncmV0dXJucyB0aGUgc3RhdHVzIGlmIHBhc3NlZCB0aGUgc2FtZSBzdGF0dXMgdHdpY2UnLCAoKSA9PiB7XG4gICAgICBhc3NlcnQuc3RyaWN0RXF1YWwoXG4gICAgICAgIG1heFJlYWRTdGF0dXMoUmVhZFN0YXR1cy5VbnJlYWQsIFJlYWRTdGF0dXMuVW5yZWFkKSxcbiAgICAgICAgUmVhZFN0YXR1cy5VbnJlYWRcbiAgICAgICk7XG4gICAgfSk7XG5cbiAgICBpdCgnc29ydHMgVW5yZWFkIDwgUmVhZCcsICgpID0+IHtcbiAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChcbiAgICAgICAgbWF4UmVhZFN0YXR1cyhSZWFkU3RhdHVzLlVucmVhZCwgUmVhZFN0YXR1cy5SZWFkKSxcbiAgICAgICAgUmVhZFN0YXR1cy5SZWFkXG4gICAgICApO1xuICAgICAgYXNzZXJ0LnN0cmljdEVxdWFsKFxuICAgICAgICBtYXhSZWFkU3RhdHVzKFJlYWRTdGF0dXMuUmVhZCwgUmVhZFN0YXR1cy5VbnJlYWQpLFxuICAgICAgICBSZWFkU3RhdHVzLlJlYWRcbiAgICAgICk7XG4gICAgfSk7XG5cbiAgICBpdCgnc29ydHMgUmVhZCA8IFZpZXdlZCcsICgpID0+IHtcbiAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChcbiAgICAgICAgbWF4UmVhZFN0YXR1cyhSZWFkU3RhdHVzLlJlYWQsIFJlYWRTdGF0dXMuVmlld2VkKSxcbiAgICAgICAgUmVhZFN0YXR1cy5WaWV3ZWRcbiAgICAgICk7XG4gICAgICBhc3NlcnQuc3RyaWN0RXF1YWwoXG4gICAgICAgIG1heFJlYWRTdGF0dXMoUmVhZFN0YXR1cy5WaWV3ZWQsIFJlYWRTdGF0dXMuUmVhZCksXG4gICAgICAgIFJlYWRTdGF0dXMuVmlld2VkXG4gICAgICApO1xuICAgIH0pO1xuXG4gICAgaXQoJ3NvcnRzIFVucmVhZCA8IFZpZXdlZCcsICgpID0+IHtcbiAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChcbiAgICAgICAgbWF4UmVhZFN0YXR1cyhSZWFkU3RhdHVzLlVucmVhZCwgUmVhZFN0YXR1cy5WaWV3ZWQpLFxuICAgICAgICBSZWFkU3RhdHVzLlZpZXdlZFxuICAgICAgKTtcbiAgICAgIGFzc2VydC5zdHJpY3RFcXVhbChcbiAgICAgICAgbWF4UmVhZFN0YXR1cyhSZWFkU3RhdHVzLlZpZXdlZCwgUmVhZFN0YXR1cy5VbnJlYWQpLFxuICAgICAgICBSZWFkU3RhdHVzLlZpZXdlZFxuICAgICAgKTtcbiAgICB9KTtcbiAgfSk7XG59KTtcbiJdLAogICJtYXBwaW5ncyI6ICJBQUdBLGtCQUF1QjtBQUV2QiwrQkFBMEM7QUFFMUMsU0FBUyxpQ0FBaUMsTUFBTTtBQUM5QyxXQUFTLGlCQUFpQixNQUFNO0FBQzlCLE9BQUcsc0RBQXNELE1BQU07QUFDN0QseUJBQU8sWUFDTCw0Q0FBYyxvQ0FBVyxRQUFRLG9DQUFXLE1BQU0sR0FDbEQsb0NBQVcsTUFDYjtBQUFBLElBQ0YsQ0FBQztBQUVELE9BQUcsdUJBQXVCLE1BQU07QUFDOUIseUJBQU8sWUFDTCw0Q0FBYyxvQ0FBVyxRQUFRLG9DQUFXLElBQUksR0FDaEQsb0NBQVcsSUFDYjtBQUNBLHlCQUFPLFlBQ0wsNENBQWMsb0NBQVcsTUFBTSxvQ0FBVyxNQUFNLEdBQ2hELG9DQUFXLElBQ2I7QUFBQSxJQUNGLENBQUM7QUFFRCxPQUFHLHVCQUF1QixNQUFNO0FBQzlCLHlCQUFPLFlBQ0wsNENBQWMsb0NBQVcsTUFBTSxvQ0FBVyxNQUFNLEdBQ2hELG9DQUFXLE1BQ2I7QUFDQSx5QkFBTyxZQUNMLDRDQUFjLG9DQUFXLFFBQVEsb0NBQVcsSUFBSSxHQUNoRCxvQ0FBVyxNQUNiO0FBQUEsSUFDRixDQUFDO0FBRUQsT0FBRyx5QkFBeUIsTUFBTTtBQUNoQyx5QkFBTyxZQUNMLDRDQUFjLG9DQUFXLFFBQVEsb0NBQVcsTUFBTSxHQUNsRCxvQ0FBVyxNQUNiO0FBQ0EseUJBQU8sWUFDTCw0Q0FBYyxvQ0FBVyxRQUFRLG9DQUFXLE1BQU0sR0FDbEQsb0NBQVcsTUFDYjtBQUFBLElBQ0YsQ0FBQztBQUFBLEVBQ0gsQ0FBQztBQUNILENBQUM7IiwKICAibmFtZXMiOiBbXQp9Cg==
