var import_child_process = require("child_process");
var import_path = require("path");
const ROOT_DIR = (0, import_path.join)(__dirname, "..", "..");
const ELECTRON = (0, import_path.join)(ROOT_DIR, "node_modules", ".bin", process.platform === "win32" ? "electron.cmd" : "electron");
const stdout = (0, import_child_process.execFileSync)(ELECTRON, [ROOT_DIR], {
  cwd: ROOT_DIR,
  env: {
    ...process.env,
    NODE_ENV: "test",
    TEST_QUIT_ON_COMPLETE: "on"
  },
  encoding: "utf8"
});
const match = stdout.match(/ci:test-electron:done=(.*)?\n/);
if (!match) {
  throw new Error("No test results were found in stdout");
}
const {
  passed,
  failed
} = JSON.parse(match[1]);
const total = passed.length + failed.length;
for (const { testName, error } of failed) {
  console.error(`- ${testName}`);
  console.error(error);
  console.error("");
}
console.log(`Passed ${passed.length} | Failed ${failed.length} | Total ${total}`);
if (failed.length !== 0) {
  process.exit(1);
}
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidGVzdC1lbGVjdHJvbi50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyMiBTaWduYWwgTWVzc2VuZ2VyLCBMTENcbi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBR1BMLTMuMC1vbmx5XG5cbmltcG9ydCB7IGV4ZWNGaWxlU3luYyB9IGZyb20gJ2NoaWxkX3Byb2Nlc3MnO1xuaW1wb3J0IHsgam9pbiB9IGZyb20gJ3BhdGgnO1xuXG5jb25zdCBST09UX0RJUiA9IGpvaW4oX19kaXJuYW1lLCAnLi4nLCAnLi4nKTtcblxuY29uc3QgRUxFQ1RST04gPSBqb2luKFxuICBST09UX0RJUixcbiAgJ25vZGVfbW9kdWxlcycsXG4gICcuYmluJyxcbiAgcHJvY2Vzcy5wbGF0Zm9ybSA9PT0gJ3dpbjMyJyA/ICdlbGVjdHJvbi5jbWQnIDogJ2VsZWN0cm9uJ1xuKTtcblxuY29uc3Qgc3Rkb3V0ID0gZXhlY0ZpbGVTeW5jKEVMRUNUUk9OLCBbUk9PVF9ESVJdLCB7XG4gIGN3ZDogUk9PVF9ESVIsXG4gIGVudjoge1xuICAgIC4uLnByb2Nlc3MuZW52LFxuICAgIE5PREVfRU5WOiAndGVzdCcsXG4gICAgVEVTVF9RVUlUX09OX0NPTVBMRVRFOiAnb24nLFxuICB9LFxuICBlbmNvZGluZzogJ3V0ZjgnLFxufSk7XG5cbmNvbnN0IG1hdGNoID0gc3Rkb3V0Lm1hdGNoKC9jaTp0ZXN0LWVsZWN0cm9uOmRvbmU9KC4qKT9cXG4vKTtcblxuaWYgKCFtYXRjaCkge1xuICB0aHJvdyBuZXcgRXJyb3IoJ05vIHRlc3QgcmVzdWx0cyB3ZXJlIGZvdW5kIGluIHN0ZG91dCcpO1xufVxuXG5jb25zdCB7XG4gIHBhc3NlZCxcbiAgZmFpbGVkLFxufToge1xuICBwYXNzZWQ6IEFycmF5PHN0cmluZz47XG4gIGZhaWxlZDogQXJyYXk8eyB0ZXN0TmFtZTogc3RyaW5nOyBlcnJvcjogc3RyaW5nIH0+O1xufSA9IEpTT04ucGFyc2UobWF0Y2hbMV0pO1xuXG5jb25zdCB0b3RhbCA9IHBhc3NlZC5sZW5ndGggKyBmYWlsZWQubGVuZ3RoO1xuXG5mb3IgKGNvbnN0IHsgdGVzdE5hbWUsIGVycm9yIH0gb2YgZmFpbGVkKSB7XG4gIGNvbnNvbGUuZXJyb3IoYC0gJHt0ZXN0TmFtZX1gKTtcbiAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gIGNvbnNvbGUuZXJyb3IoJycpO1xufVxuXG5jb25zb2xlLmxvZyhcbiAgYFBhc3NlZCAke3Bhc3NlZC5sZW5ndGh9IHwgRmFpbGVkICR7ZmFpbGVkLmxlbmd0aH0gfCBUb3RhbCAke3RvdGFsfWBcbik7XG5cbmlmIChmYWlsZWQubGVuZ3RoICE9PSAwKSB7XG4gIHByb2Nlc3MuZXhpdCgxKTtcbn1cbiJdLAogICJtYXBwaW5ncyI6ICJBQUdBLDJCQUE2QjtBQUM3QixrQkFBcUI7QUFFckIsTUFBTSxXQUFXLHNCQUFLLFdBQVcsTUFBTSxJQUFJO0FBRTNDLE1BQU0sV0FBVyxzQkFDZixVQUNBLGdCQUNBLFFBQ0EsUUFBUSxhQUFhLFVBQVUsaUJBQWlCLFVBQ2xEO0FBRUEsTUFBTSxTQUFTLHVDQUFhLFVBQVUsQ0FBQyxRQUFRLEdBQUc7QUFBQSxFQUNoRCxLQUFLO0FBQUEsRUFDTCxLQUFLO0FBQUEsT0FDQSxRQUFRO0FBQUEsSUFDWCxVQUFVO0FBQUEsSUFDVix1QkFBdUI7QUFBQSxFQUN6QjtBQUFBLEVBQ0EsVUFBVTtBQUNaLENBQUM7QUFFRCxNQUFNLFFBQVEsT0FBTyxNQUFNLCtCQUErQjtBQUUxRCxJQUFJLENBQUMsT0FBTztBQUNWLFFBQU0sSUFBSSxNQUFNLHNDQUFzQztBQUN4RDtBQUVBLE1BQU07QUFBQSxFQUNKO0FBQUEsRUFDQTtBQUFBLElBSUUsS0FBSyxNQUFNLE1BQU0sRUFBRTtBQUV2QixNQUFNLFFBQVEsT0FBTyxTQUFTLE9BQU87QUFFckMsV0FBVyxFQUFFLFVBQVUsV0FBVyxRQUFRO0FBQ3hDLFVBQVEsTUFBTSxLQUFLLFVBQVU7QUFDN0IsVUFBUSxNQUFNLEtBQUs7QUFDbkIsVUFBUSxNQUFNLEVBQUU7QUFDbEI7QUFFQSxRQUFRLElBQ04sVUFBVSxPQUFPLG1CQUFtQixPQUFPLGtCQUFrQixPQUMvRDtBQUVBLElBQUksT0FBTyxXQUFXLEdBQUc7QUFDdkIsVUFBUSxLQUFLLENBQUM7QUFDaEI7IiwKICAibmFtZXMiOiBbXQp9Cg==
