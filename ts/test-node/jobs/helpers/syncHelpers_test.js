var import_chai = require("chai");
var import_syncHelpers = require("../../../jobs/helpers/syncHelpers");
describe("read and view sync helpers", () => {
  describe("parseRawSyncDataArray", () => {
    it("errors if not passed an array", () => {
      [void 0, { timestamp: 123 }].forEach((input) => {
        import_chai.assert.throws(() => (0, import_syncHelpers.parseRawSyncDataArray)(input));
      });
    });
    it("errors if passed an array with any invalid elements", () => {
      const valid = {
        messageId: "4a3ad1e1-61a7-464d-9982-f3e8eea81818",
        senderUuid: "253ce806-7375-4227-82ed-eb8321630133",
        timestamp: 1234
      };
      [void 0, {}, { messageId: -1, timestamp: 4567 }].forEach((invalid) => {
        import_chai.assert.throws(() => (0, import_syncHelpers.parseRawSyncDataArray)([valid, invalid]));
      });
    });
    it("does nothing to an empty array", () => {
      import_chai.assert.deepEqual((0, import_syncHelpers.parseRawSyncDataArray)([]), []);
    });
    it("handles a valid array", () => {
      import_chai.assert.deepEqual((0, import_syncHelpers.parseRawSyncDataArray)([
        {
          senderUuid: "d9e1e89b-f4a6-4c30-b3ec-8e7a964f94bd",
          timestamp: 1234
        },
        {
          messageId: "4a3ad1e1-61a7-464d-9982-f3e8eea81818",
          senderE164: void 0,
          senderUuid: "253ce806-7375-4227-82ed-eb8321630133",
          timestamp: 4567
        }
      ]), [
        {
          messageId: void 0,
          senderE164: void 0,
          senderUuid: "d9e1e89b-f4a6-4c30-b3ec-8e7a964f94bd",
          timestamp: 1234
        },
        {
          messageId: "4a3ad1e1-61a7-464d-9982-f3e8eea81818",
          senderE164: void 0,
          senderUuid: "253ce806-7375-4227-82ed-eb8321630133",
          timestamp: 4567
        }
      ]);
    });
    it("turns `null` into `undefined`", () => {
      import_chai.assert.deepEqual((0, import_syncHelpers.parseRawSyncDataArray)([
        {
          messageId: null,
          senderUuid: "d9e1e89b-f4a6-4c30-b3ec-8e7a964f94bd",
          timestamp: 1234
        }
      ]), [
        {
          messageId: void 0,
          senderE164: void 0,
          senderUuid: "d9e1e89b-f4a6-4c30-b3ec-8e7a964f94bd",
          timestamp: 1234
        }
      ]);
    });
    it("removes extra properties", () => {
      import_chai.assert.deepEqual((0, import_syncHelpers.parseRawSyncDataArray)([
        {
          timestamp: 1234,
          extra: true
        }
      ]), [
        {
          messageId: void 0,
          senderE164: void 0,
          senderUuid: void 0,
          timestamp: 1234
        }
      ]);
    });
  });
});
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsic3luY0hlbHBlcnNfdGVzdC50cyJdLAogICJzb3VyY2VzQ29udGVudCI6IFsiLy8gQ29weXJpZ2h0IDIwMjEtMjAyMiBTaWduYWwgTWVzc2VuZ2VyLCBMTENcbi8vIFNQRFgtTGljZW5zZS1JZGVudGlmaWVyOiBBR1BMLTMuMC1vbmx5XG5cbmltcG9ydCB7IGFzc2VydCB9IGZyb20gJ2NoYWknO1xuXG5pbXBvcnQgeyBwYXJzZVJhd1N5bmNEYXRhQXJyYXkgfSBmcm9tICcuLi8uLi8uLi9qb2JzL2hlbHBlcnMvc3luY0hlbHBlcnMnO1xuXG5kZXNjcmliZSgncmVhZCBhbmQgdmlldyBzeW5jIGhlbHBlcnMnLCAoKSA9PiB7XG4gIGRlc2NyaWJlKCdwYXJzZVJhd1N5bmNEYXRhQXJyYXknLCAoKSA9PiB7XG4gICAgaXQoJ2Vycm9ycyBpZiBub3QgcGFzc2VkIGFuIGFycmF5JywgKCkgPT4ge1xuICAgICAgW3VuZGVmaW5lZCwgeyB0aW1lc3RhbXA6IDEyMyB9XS5mb3JFYWNoKGlucHV0ID0+IHtcbiAgICAgICAgYXNzZXJ0LnRocm93cygoKSA9PiBwYXJzZVJhd1N5bmNEYXRhQXJyYXkoaW5wdXQpKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgaXQoJ2Vycm9ycyBpZiBwYXNzZWQgYW4gYXJyYXkgd2l0aCBhbnkgaW52YWxpZCBlbGVtZW50cycsICgpID0+IHtcbiAgICAgIGNvbnN0IHZhbGlkID0ge1xuICAgICAgICBtZXNzYWdlSWQ6ICc0YTNhZDFlMS02MWE3LTQ2NGQtOTk4Mi1mM2U4ZWVhODE4MTgnLFxuICAgICAgICBzZW5kZXJVdWlkOiAnMjUzY2U4MDYtNzM3NS00MjI3LTgyZWQtZWI4MzIxNjMwMTMzJyxcbiAgICAgICAgdGltZXN0YW1wOiAxMjM0LFxuICAgICAgfTtcblxuICAgICAgW3VuZGVmaW5lZCwge30sIHsgbWVzc2FnZUlkOiAtMSwgdGltZXN0YW1wOiA0NTY3IH1dLmZvckVhY2goaW52YWxpZCA9PiB7XG4gICAgICAgIGFzc2VydC50aHJvd3MoKCkgPT4gcGFyc2VSYXdTeW5jRGF0YUFycmF5KFt2YWxpZCwgaW52YWxpZF0pKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgaXQoJ2RvZXMgbm90aGluZyB0byBhbiBlbXB0eSBhcnJheScsICgpID0+IHtcbiAgICAgIGFzc2VydC5kZWVwRXF1YWwocGFyc2VSYXdTeW5jRGF0YUFycmF5KFtdKSwgW10pO1xuICAgIH0pO1xuXG4gICAgaXQoJ2hhbmRsZXMgYSB2YWxpZCBhcnJheScsICgpID0+IHtcbiAgICAgIGFzc2VydC5kZWVwRXF1YWwoXG4gICAgICAgIHBhcnNlUmF3U3luY0RhdGFBcnJheShbXG4gICAgICAgICAge1xuICAgICAgICAgICAgc2VuZGVyVXVpZDogJ2Q5ZTFlODliLWY0YTYtNGMzMC1iM2VjLThlN2E5NjRmOTRiZCcsXG4gICAgICAgICAgICB0aW1lc3RhbXA6IDEyMzQsXG4gICAgICAgICAgfSxcbiAgICAgICAgICB7XG4gICAgICAgICAgICBtZXNzYWdlSWQ6ICc0YTNhZDFlMS02MWE3LTQ2NGQtOTk4Mi1mM2U4ZWVhODE4MTgnLFxuICAgICAgICAgICAgc2VuZGVyRTE2NDogdW5kZWZpbmVkLFxuICAgICAgICAgICAgc2VuZGVyVXVpZDogJzI1M2NlODA2LTczNzUtNDIyNy04MmVkLWViODMyMTYzMDEzMycsXG4gICAgICAgICAgICB0aW1lc3RhbXA6IDQ1NjcsXG4gICAgICAgICAgfSxcbiAgICAgICAgXSksXG4gICAgICAgIFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBtZXNzYWdlSWQ6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIHNlbmRlckUxNjQ6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIHNlbmRlclV1aWQ6ICdkOWUxZTg5Yi1mNGE2LTRjMzAtYjNlYy04ZTdhOTY0Zjk0YmQnLFxuICAgICAgICAgICAgdGltZXN0YW1wOiAxMjM0LFxuICAgICAgICAgIH0sXG4gICAgICAgICAge1xuICAgICAgICAgICAgbWVzc2FnZUlkOiAnNGEzYWQxZTEtNjFhNy00NjRkLTk5ODItZjNlOGVlYTgxODE4JyxcbiAgICAgICAgICAgIHNlbmRlckUxNjQ6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIHNlbmRlclV1aWQ6ICcyNTNjZTgwNi03Mzc1LTQyMjctODJlZC1lYjgzMjE2MzAxMzMnLFxuICAgICAgICAgICAgdGltZXN0YW1wOiA0NTY3LFxuICAgICAgICAgIH0sXG4gICAgICAgIF1cbiAgICAgICk7XG4gICAgfSk7XG5cbiAgICBpdCgndHVybnMgYG51bGxgIGludG8gYHVuZGVmaW5lZGAnLCAoKSA9PiB7XG4gICAgICBhc3NlcnQuZGVlcEVxdWFsKFxuICAgICAgICBwYXJzZVJhd1N5bmNEYXRhQXJyYXkoW1xuICAgICAgICAgIHtcbiAgICAgICAgICAgIG1lc3NhZ2VJZDogbnVsbCxcbiAgICAgICAgICAgIHNlbmRlclV1aWQ6ICdkOWUxZTg5Yi1mNGE2LTRjMzAtYjNlYy04ZTdhOTY0Zjk0YmQnLFxuICAgICAgICAgICAgdGltZXN0YW1wOiAxMjM0LFxuICAgICAgICAgIH0sXG4gICAgICAgIF0pLFxuICAgICAgICBbXG4gICAgICAgICAge1xuICAgICAgICAgICAgbWVzc2FnZUlkOiB1bmRlZmluZWQsXG4gICAgICAgICAgICBzZW5kZXJFMTY0OiB1bmRlZmluZWQsXG4gICAgICAgICAgICBzZW5kZXJVdWlkOiAnZDllMWU4OWItZjRhNi00YzMwLWIzZWMtOGU3YTk2NGY5NGJkJyxcbiAgICAgICAgICAgIHRpbWVzdGFtcDogMTIzNCxcbiAgICAgICAgICB9LFxuICAgICAgICBdXG4gICAgICApO1xuICAgIH0pO1xuXG4gICAgaXQoJ3JlbW92ZXMgZXh0cmEgcHJvcGVydGllcycsICgpID0+IHtcbiAgICAgIGFzc2VydC5kZWVwRXF1YWwoXG4gICAgICAgIHBhcnNlUmF3U3luY0RhdGFBcnJheShbXG4gICAgICAgICAge1xuICAgICAgICAgICAgdGltZXN0YW1wOiAxMjM0LFxuICAgICAgICAgICAgZXh0cmE6IHRydWUsXG4gICAgICAgICAgfSxcbiAgICAgICAgXSksXG4gICAgICAgIFtcbiAgICAgICAgICB7XG4gICAgICAgICAgICBtZXNzYWdlSWQ6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIHNlbmRlckUxNjQ6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIHNlbmRlclV1aWQ6IHVuZGVmaW5lZCxcbiAgICAgICAgICAgIHRpbWVzdGFtcDogMTIzNCxcbiAgICAgICAgICB9LFxuICAgICAgICBdXG4gICAgICApO1xuICAgIH0pO1xuICB9KTtcbn0pO1xuIl0sCiAgIm1hcHBpbmdzIjogIkFBR0Esa0JBQXVCO0FBRXZCLHlCQUFzQztBQUV0QyxTQUFTLDhCQUE4QixNQUFNO0FBQzNDLFdBQVMseUJBQXlCLE1BQU07QUFDdEMsT0FBRyxpQ0FBaUMsTUFBTTtBQUN4QyxPQUFDLFFBQVcsRUFBRSxXQUFXLElBQUksQ0FBQyxFQUFFLFFBQVEsV0FBUztBQUMvQywyQkFBTyxPQUFPLE1BQU0sOENBQXNCLEtBQUssQ0FBQztBQUFBLE1BQ2xELENBQUM7QUFBQSxJQUNILENBQUM7QUFFRCxPQUFHLHVEQUF1RCxNQUFNO0FBQzlELFlBQU0sUUFBUTtBQUFBLFFBQ1osV0FBVztBQUFBLFFBQ1gsWUFBWTtBQUFBLFFBQ1osV0FBVztBQUFBLE1BQ2I7QUFFQSxPQUFDLFFBQVcsQ0FBQyxHQUFHLEVBQUUsV0FBVyxJQUFJLFdBQVcsS0FBSyxDQUFDLEVBQUUsUUFBUSxhQUFXO0FBQ3JFLDJCQUFPLE9BQU8sTUFBTSw4Q0FBc0IsQ0FBQyxPQUFPLE9BQU8sQ0FBQyxDQUFDO0FBQUEsTUFDN0QsQ0FBQztBQUFBLElBQ0gsQ0FBQztBQUVELE9BQUcsa0NBQWtDLE1BQU07QUFDekMseUJBQU8sVUFBVSw4Q0FBc0IsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0FBQUEsSUFDaEQsQ0FBQztBQUVELE9BQUcseUJBQXlCLE1BQU07QUFDaEMseUJBQU8sVUFDTCw4Q0FBc0I7QUFBQSxRQUNwQjtBQUFBLFVBQ0UsWUFBWTtBQUFBLFVBQ1osV0FBVztBQUFBLFFBQ2I7QUFBQSxRQUNBO0FBQUEsVUFDRSxXQUFXO0FBQUEsVUFDWCxZQUFZO0FBQUEsVUFDWixZQUFZO0FBQUEsVUFDWixXQUFXO0FBQUEsUUFDYjtBQUFBLE1BQ0YsQ0FBQyxHQUNEO0FBQUEsUUFDRTtBQUFBLFVBQ0UsV0FBVztBQUFBLFVBQ1gsWUFBWTtBQUFBLFVBQ1osWUFBWTtBQUFBLFVBQ1osV0FBVztBQUFBLFFBQ2I7QUFBQSxRQUNBO0FBQUEsVUFDRSxXQUFXO0FBQUEsVUFDWCxZQUFZO0FBQUEsVUFDWixZQUFZO0FBQUEsVUFDWixXQUFXO0FBQUEsUUFDYjtBQUFBLE1BQ0YsQ0FDRjtBQUFBLElBQ0YsQ0FBQztBQUVELE9BQUcsaUNBQWlDLE1BQU07QUFDeEMseUJBQU8sVUFDTCw4Q0FBc0I7QUFBQSxRQUNwQjtBQUFBLFVBQ0UsV0FBVztBQUFBLFVBQ1gsWUFBWTtBQUFBLFVBQ1osV0FBVztBQUFBLFFBQ2I7QUFBQSxNQUNGLENBQUMsR0FDRDtBQUFBLFFBQ0U7QUFBQSxVQUNFLFdBQVc7QUFBQSxVQUNYLFlBQVk7QUFBQSxVQUNaLFlBQVk7QUFBQSxVQUNaLFdBQVc7QUFBQSxRQUNiO0FBQUEsTUFDRixDQUNGO0FBQUEsSUFDRixDQUFDO0FBRUQsT0FBRyw0QkFBNEIsTUFBTTtBQUNuQyx5QkFBTyxVQUNMLDhDQUFzQjtBQUFBLFFBQ3BCO0FBQUEsVUFDRSxXQUFXO0FBQUEsVUFDWCxPQUFPO0FBQUEsUUFDVDtBQUFBLE1BQ0YsQ0FBQyxHQUNEO0FBQUEsUUFDRTtBQUFBLFVBQ0UsV0FBVztBQUFBLFVBQ1gsWUFBWTtBQUFBLFVBQ1osWUFBWTtBQUFBLFVBQ1osV0FBVztBQUFBLFFBQ2I7QUFBQSxNQUNGLENBQ0Y7QUFBQSxJQUNGLENBQUM7QUFBQSxFQUNILENBQUM7QUFDSCxDQUFDOyIsCiAgIm5hbWVzIjogW10KfQo=
