var __defProp = Object.defineProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
let confirmationDialogViewNode;
let confirmationDialogPreviousFocus;
function removeConfirmationDialog() {
  if (!confirmationDialogViewNode) {
    return;
  }
  window.ReactDOM.unmountComponentAtNode(confirmationDialogViewNode);
  document.body.removeChild(confirmationDialogViewNode);
  if (confirmationDialogPreviousFocus && typeof confirmationDialogPreviousFocus.focus === "function") {
    confirmationDialogPreviousFocus.focus();
  }
  confirmationDialogViewNode = void 0;
}
function showConfirmationDialog(options) {
  if (confirmationDialogViewNode) {
    removeConfirmationDialog();
  }
  confirmationDialogViewNode = document.createElement("div");
  document.body.appendChild(confirmationDialogViewNode);
  confirmationDialogPreviousFocus = document.activeElement;
  window.ReactDOM.render(/* @__PURE__ */ React.createElement(window.Signal.Components.ConfirmationDialog, {
    onTopOfEverything: options.onTopOfEverything,
    actions: [
      {
        action: () => {
          options.resolve();
        },
        style: options.confirmStyle,
        text: options.okText || window.i18n("ok")
      }
    ],
    cancelText: options.cancelText || window.i18n("cancel"),
    i18n: window.i18n,
    onCancel: () => {
      if (options.reject) {
        options.reject(new Error("showConfirmationDialog: onCancel called"));
      }
    },
    onClose: () => {
      removeConfirmationDialog();
    },
    title: options.message
  }), confirmationDialogViewNode);
}
window.showConfirmationDialog = showConfirmationDialog;
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsic2hvd0NvbmZpcm1hdGlvbkRpYWxvZy50c3giXSwKICAic291cmNlc0NvbnRlbnQiOiBbIi8vIENvcHlyaWdodCAyMDE1LTIwMjEgU2lnbmFsIE1lc3NlbmdlciwgTExDXG4vLyBTUERYLUxpY2Vuc2UtSWRlbnRpZmllcjogQUdQTC0zLjAtb25seVxuXG4vLyBUaGlzIGZpbGUgaXMgaGVyZSB0ZW1wb3JhcmlseSB3aGlsZSB3ZSdyZSBzd2l0Y2hpbmcgb2ZmIG9mIEJhY2tib25lIGludG9cbi8vIFJlYWN0LiBJbiB0aGUgZnV0dXJlLCBhbmQgaW4gUmVhY3QtbGFuZCwgcGxlYXNlIGp1c3QgaW1wb3J0IGFuZCB1c2Vcbi8vIENvbmZpcm1hdGlvbkRpYWxvZyBkaXJlY3RseS4gVGhpcyBpcyB0aGUgdGhpbiBBUEkgbGF5ZXIgdG8gYnJpZGdlIHRoZSBnYXBcbi8vIHdoaWxlIHdlIGNvbnZlcnQgdGhpbmdzIG92ZXIuIFBsZWFzZSBkZWxldGUgdGhpcyBmaWxlIG9uY2UgYWxsIHVzYWdlcyBhcmVcbi8vIHBvcnRlZCBvdmVyLiBOb3RlOiB0aGlzIGZpbGUgY2Fubm90IGhhdmUgYW55IGltcG9ydHMvZXhwb3J0cyBzaW5jZSBpdCBpc1xuLy8gYmVpbmcgaW5jbHVkZWQgaW4gYSA8c2NyaXB0IC8+IHRhZy5cblxudHlwZSBDb25maXJtYXRpb25EaWFsb2dWaWV3UHJvcHMgPSB7XG4gIG9uVG9wT2ZFdmVyeXRoaW5nPzogYm9vbGVhbjtcbiAgY2FuY2VsVGV4dD86IHN0cmluZztcbiAgY29uZmlybVN0eWxlPzogJ2FmZmlybWF0aXZlJyB8ICduZWdhdGl2ZSc7XG4gIG1lc3NhZ2U6IHN0cmluZztcbiAgb2tUZXh0OiBzdHJpbmc7XG4gIHJlamVjdD86IChlcnJvcjogRXJyb3IpID0+IHZvaWQ7XG4gIHJlc29sdmU6ICgpID0+IHZvaWQ7XG59O1xuXG5sZXQgY29uZmlybWF0aW9uRGlhbG9nVmlld05vZGU6IEhUTUxFbGVtZW50IHwgdW5kZWZpbmVkO1xubGV0IGNvbmZpcm1hdGlvbkRpYWxvZ1ByZXZpb3VzRm9jdXM6IEhUTUxFbGVtZW50IHwgdW5kZWZpbmVkO1xuXG5mdW5jdGlvbiByZW1vdmVDb25maXJtYXRpb25EaWFsb2coKSB7XG4gIGlmICghY29uZmlybWF0aW9uRGlhbG9nVmlld05vZGUpIHtcbiAgICByZXR1cm47XG4gIH1cblxuICB3aW5kb3cuUmVhY3RET00udW5tb3VudENvbXBvbmVudEF0Tm9kZShjb25maXJtYXRpb25EaWFsb2dWaWV3Tm9kZSk7XG4gIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoY29uZmlybWF0aW9uRGlhbG9nVmlld05vZGUpO1xuXG4gIGlmIChcbiAgICBjb25maXJtYXRpb25EaWFsb2dQcmV2aW91c0ZvY3VzICYmXG4gICAgdHlwZW9mIGNvbmZpcm1hdGlvbkRpYWxvZ1ByZXZpb3VzRm9jdXMuZm9jdXMgPT09ICdmdW5jdGlvbidcbiAgKSB7XG4gICAgY29uZmlybWF0aW9uRGlhbG9nUHJldmlvdXNGb2N1cy5mb2N1cygpO1xuICB9XG4gIGNvbmZpcm1hdGlvbkRpYWxvZ1ZpZXdOb2RlID0gdW5kZWZpbmVkO1xufVxuXG5mdW5jdGlvbiBzaG93Q29uZmlybWF0aW9uRGlhbG9nKG9wdGlvbnM6IENvbmZpcm1hdGlvbkRpYWxvZ1ZpZXdQcm9wcykge1xuICBpZiAoY29uZmlybWF0aW9uRGlhbG9nVmlld05vZGUpIHtcbiAgICByZW1vdmVDb25maXJtYXRpb25EaWFsb2coKTtcbiAgfVxuXG4gIGNvbmZpcm1hdGlvbkRpYWxvZ1ZpZXdOb2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoY29uZmlybWF0aW9uRGlhbG9nVmlld05vZGUpO1xuXG4gIGNvbmZpcm1hdGlvbkRpYWxvZ1ByZXZpb3VzRm9jdXMgPSBkb2N1bWVudC5hY3RpdmVFbGVtZW50IGFzIEhUTUxFbGVtZW50O1xuXG4gIHdpbmRvdy5SZWFjdERPTS5yZW5kZXIoXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0L3JlYWN0LWluLWpzeC1zY29wZSwgcmVhY3QvanN4LW5vLXVuZGVmXG4gICAgPHdpbmRvdy5TaWduYWwuQ29tcG9uZW50cy5Db25maXJtYXRpb25EaWFsb2dcbiAgICAgIG9uVG9wT2ZFdmVyeXRoaW5nPXtvcHRpb25zLm9uVG9wT2ZFdmVyeXRoaW5nfVxuICAgICAgYWN0aW9ucz17W1xuICAgICAgICB7XG4gICAgICAgICAgYWN0aW9uOiAoKSA9PiB7XG4gICAgICAgICAgICBvcHRpb25zLnJlc29sdmUoKTtcbiAgICAgICAgICB9LFxuICAgICAgICAgIHN0eWxlOiBvcHRpb25zLmNvbmZpcm1TdHlsZSxcbiAgICAgICAgICB0ZXh0OiBvcHRpb25zLm9rVGV4dCB8fCB3aW5kb3cuaTE4bignb2snKSxcbiAgICAgICAgfSxcbiAgICAgIF19XG4gICAgICBjYW5jZWxUZXh0PXtvcHRpb25zLmNhbmNlbFRleHQgfHwgd2luZG93LmkxOG4oJ2NhbmNlbCcpfVxuICAgICAgaTE4bj17d2luZG93LmkxOG59XG4gICAgICBvbkNhbmNlbD17KCkgPT4ge1xuICAgICAgICBpZiAob3B0aW9ucy5yZWplY3QpIHtcbiAgICAgICAgICBvcHRpb25zLnJlamVjdChuZXcgRXJyb3IoJ3Nob3dDb25maXJtYXRpb25EaWFsb2c6IG9uQ2FuY2VsIGNhbGxlZCcpKTtcbiAgICAgICAgfVxuICAgICAgfX1cbiAgICAgIG9uQ2xvc2U9eygpID0+IHtcbiAgICAgICAgcmVtb3ZlQ29uZmlybWF0aW9uRGlhbG9nKCk7XG4gICAgICB9fVxuICAgICAgdGl0bGU9e29wdGlvbnMubWVzc2FnZX1cbiAgICAvPixcbiAgICBjb25maXJtYXRpb25EaWFsb2dWaWV3Tm9kZVxuICApO1xufVxuXG53aW5kb3cuc2hvd0NvbmZpcm1hdGlvbkRpYWxvZyA9IHNob3dDb25maXJtYXRpb25EaWFsb2c7XG4iXSwKICAibWFwcGluZ3MiOiAiOztBQW9CQSxJQUFJO0FBQ0osSUFBSTtBQUVKLG9DQUFvQztBQUNsQyxNQUFJLENBQUMsNEJBQTRCO0FBQy9CO0FBQUEsRUFDRjtBQUVBLFNBQU8sU0FBUyx1QkFBdUIsMEJBQTBCO0FBQ2pFLFdBQVMsS0FBSyxZQUFZLDBCQUEwQjtBQUVwRCxNQUNFLG1DQUNBLE9BQU8sZ0NBQWdDLFVBQVUsWUFDakQ7QUFDQSxvQ0FBZ0MsTUFBTTtBQUFBLEVBQ3hDO0FBQ0EsK0JBQTZCO0FBQy9CO0FBZlMsQUFpQlQsZ0NBQWdDLFNBQXNDO0FBQ3BFLE1BQUksNEJBQTRCO0FBQzlCLDZCQUF5QjtBQUFBLEVBQzNCO0FBRUEsK0JBQTZCLFNBQVMsY0FBYyxLQUFLO0FBQ3pELFdBQVMsS0FBSyxZQUFZLDBCQUEwQjtBQUVwRCxvQ0FBa0MsU0FBUztBQUUzQyxTQUFPLFNBQVMsT0FFZCxvQ0FBQyxPQUFPLE9BQU8sV0FBVyxvQkFBekI7QUFBQSxJQUNDLG1CQUFtQixRQUFRO0FBQUEsSUFDM0IsU0FBUztBQUFBLE1BQ1A7QUFBQSxRQUNFLFFBQVEsTUFBTTtBQUNaLGtCQUFRLFFBQVE7QUFBQSxRQUNsQjtBQUFBLFFBQ0EsT0FBTyxRQUFRO0FBQUEsUUFDZixNQUFNLFFBQVEsVUFBVSxPQUFPLEtBQUssSUFBSTtBQUFBLE1BQzFDO0FBQUEsSUFDRjtBQUFBLElBQ0EsWUFBWSxRQUFRLGNBQWMsT0FBTyxLQUFLLFFBQVE7QUFBQSxJQUN0RCxNQUFNLE9BQU87QUFBQSxJQUNiLFVBQVUsTUFBTTtBQUNkLFVBQUksUUFBUSxRQUFRO0FBQ2xCLGdCQUFRLE9BQU8sSUFBSSxNQUFNLHlDQUF5QyxDQUFDO0FBQUEsTUFDckU7QUFBQSxJQUNGO0FBQUEsSUFDQSxTQUFTLE1BQU07QUFDYiwrQkFBeUI7QUFBQSxJQUMzQjtBQUFBLElBQ0EsT0FBTyxRQUFRO0FBQUEsR0FDakIsR0FDQSwwQkFDRjtBQUNGO0FBckNTLEFBdUNULE9BQU8seUJBQXlCOyIsCiAgIm5hbWVzIjogW10KfQo=
